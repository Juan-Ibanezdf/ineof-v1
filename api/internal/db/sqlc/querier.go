// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	// Criar uma nova campanha
	CreateCampanha(ctx context.Context, arg CreateCampanhaParams) (Campanha, error)
	// Criar um novo equipamento
	CreateEquipamento(ctx context.Context, arg CreateEquipamentoParams) (Equipamento, error)
	// Inserir um novo dado do LIDAR WindCube
	CreateLidarWindcubeDado(ctx context.Context, arg CreateLidarWindcubeDadoParams) (LidarWindcubeDado, error)
	// Deletar uma campanha
	DeleteCampanha(ctx context.Context, id uuid.UUID) error
	// Deletar um equipamento
	DeleteEquipamento(ctx context.Context, id uuid.UUID) error
	// Deletar um dado do LIDAR
	DeleteLidarWindcubeDado(ctx context.Context, id int32) error
	// Buscar uma campanha pelo ID
	GetCampanhaByID(ctx context.Context, id uuid.UUID) (Campanha, error)
	// Buscar um equipamento pelo ID
	GetEquipamentoByID(ctx context.Context, id uuid.UUID) (Equipamento, error)
	// Buscar um dado do LIDAR pelo ID
	GetLidarWindcubeDadoByID(ctx context.Context, id int32) (LidarWindcubeDado, error)
	// Listar todas as campanhas
	ListCampanhas(ctx context.Context) ([]Campanha, error)
	// Listar todos os equipamentos
	ListEquipamentos(ctx context.Context) ([]Equipamento, error)
	// Listar dados do LIDAR por campanha
	ListLidarWindcubeDadosByCampanha(ctx context.Context, campanhaID uuid.UUID) ([]LidarWindcubeDado, error)
	ListLidarWindcubeDadosCustom(ctx context.Context, arg ListLidarWindcubeDadosCustomParams) ([]ListLidarWindcubeDadosCustomRow, error)
	// Atualizar uma campanha existente
	UpdateCampanha(ctx context.Context, arg UpdateCampanhaParams) (Campanha, error)
	// Atualizar um equipamento existente
	UpdateEquipamento(ctx context.Context, arg UpdateEquipamentoParams) (Equipamento, error)
}

var _ Querier = (*Queries)(nil)
