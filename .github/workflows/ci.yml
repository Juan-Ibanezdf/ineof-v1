name: ci

on: 
  push: 
    branches: [ main ] 
  pull_request: 
    branches: [ main ] 

jobs: 
  test: 
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgis/postgis:12-3.3-alpine
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
          POSTGRES_DB: ineof_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U root -d ineof_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.4'
      id: go

    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Go modules cache
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('api/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      working-directory: api
      run: go mod download

    - name: Install golang-migrate
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/latest/download/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate /usr/local/bin/migrate
        which migrate

    - name: Run migrations
      working-directory: api
      run: make migrateup

    - name: Run Tests
      working-directory: api
      run: make test
